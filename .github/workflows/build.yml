name: build
on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: read
      checks: write

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
          cache: 'gradle'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: Run SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: >
          ./gradlew sonarqube
          -Dsonar.host.url=$SONAR_HOST_URL
          -Dsonar.token=$SONAR_TOKEN
          -Dsonar.scanner.keepReport=true
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1
        with:
          scanMetadataReportFile: build/sonar/report-task.txt
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
      - name: Upload Sonar scanner artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonar-scanner
          path: |
            build/sonar/report-task.txt
            build/sonar/scanner-report/**
          if-no-files-found: warn
          retention-days: 7
